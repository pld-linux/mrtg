#!/bin/sh
#
# mrtg		mrtg loggerr
#
# chkconfig:	345 86 14
# description:	mrtg is a network traffic logging daemon.
# processname:	mrtg
# pidfile:	/var/run/mrtg/*.pid

# Source function library
. /etc/rc.d/init.d/functions

# Initial values:
CONFIGDIR="/etc/mrtg/conf.d"
DAEMON_USER="stats"

# Get service config
[ -f /etc/sysconfig/mrtg ] && . /etc/sysconfig/mrtg

# mrtg doesn't work in utf-8 locale
for k in LANG LC_CTYPE LC_NUMERIC LC_TIME LC_COLLATE LC_MONETARY LC_MESSAGES \
	LC_PAPER LC_NAME LC_ADDRESS LC_TELEPHONE LC_MEASUREMENT LC_IDENTIFICATION LC_ALL; do
	eval v=$`echo $k`
	if [[ "$v" == *[Uu][Tt][Ff]-8 ]]; then
		eval export $k=\${$k%.[Uu][Tt][Ff]-8}
	fi
done


getconfigs() {
	if [ -z "${CONFIGS}" ]; then
		echo ${CONFIGDIR}/*.cfg
		return
	fi

	echo >&2 "mrtg: WARNING: Using obsolete CONFIGS definition. look at /etc/sysconfig/mrtg for hints."
	for file in $CONFIGS; do
		echo ${CONFIGDIR}/${file}
	done
}

CONFIGS=$(getconfigs)

# configtest itself
# must return non-zero if check failed
# output is discarded if checkconfig is ran without details
configtest() {
	local RETVAL=0 rc file f
	for file in $CONFIGS; do
		f=${file##*/}
		run_cmd --user "$DAEMON_USER" "Checking: $file" \
			mrtg --check $file \
				--lock-file=/var/run/mrtg/${f}_l
		rc=$?
		if [ $rc -ne 0 -a $RETVAL -eq 0 ]; then
			RETVAL=$rc
		fi
	done

	return $RETVAL
}

# wrapper for configtest
checkconfig() {
	local details=${1:-0}

	if [ $details = 1 ]; then
		# run config test and display report (status action)
		show "Checking %s configuration" "MRTG"; busy
		local out
		out=$(configtest 2>&1)
		RETVAL=$?
		if [ $RETVAL = 0 ]; then
			ok
		else
			fail
		fi
		[ "$out" ] && echo >&2 "$out"
	else
		# run config test and abort with nice message if failed
		# (for actions checking status before action).
		configtest >/dev/null 2>&1
		RETVAL=$?
		if [ $RETVAL != 0 ]; then
			show "Checking %s configuration" "MRTG"; fail
			nls 'Configuration test failed. See details with %s "checkconfig"' $0
			exit $RETVAL
		fi
	fi
}

start() {
	if [ -f /var/lock/subsys/mrtg ]; then
		msg_already_running "MRTG"
		return
	fi

	checkconfig

	local file f closefds
	is_no "$RC_LOGGING" && closefds=--closefds
	for file in $CONFIGS; do
		f=${file##*/}
		msg_starting "MRTG ($f)"
		daemon $closefds --user "$DAEMON_USER" /usr/bin/env LANG="C" /usr/bin/mrtg $file --daemon \
			--logging /var/log/mrtg/$f.log \
			--pid-file=/var/run/mrtg/$f.pid \
			--lock-file=/var/run/mrtg/${f}_l \
			--confcache-file=/var/lib/mrtg/$f.ok
	done
	RETVAL=$?
	[ $RETVAL -eq 0 ] && touch /var/lock/subsys/mrtg
}

stop() {
	if [ ! -f /var/lock/subsys/mrtg ]; then
		msg_not_running "MRTG"
		return
	fi

	msg_stopping "MRTG"
	killproc mrtg
	rm -f /var/lock/subsys/mrtg /var/run/mrtg/*.pid >/dev/null 2>&1
}

reload() {
	if [ ! -f /var/lock/subsys/mrtg ]; then
		msg_not_running "MRTG"
		RETVAL=7
		return
	fi

	checkconfig
	msg_reloading "MRTG"
	killproc mrtg -HUP
	RETVAL=$?
}


RETVAL=0
# See how we were called.
case "$1" in
  start)
	start
	;;
  stop)
	stop
	;;
  restart)
	checkconfig
	stop
	start
	;;
  reload|force-reload)
	reload
	;;
  checkconfig|configtest)
	checkconfig 1
	;;
  status)
	status mrtg
	RETVAL=$?
	;;
  *)
	msg_usage "$0 {start|stop|restart|reload|force-reload|checkconfig|status}"
	exit 3
esac

exit $RETVAL
